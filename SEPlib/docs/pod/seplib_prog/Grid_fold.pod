=head1 NAME


Sort3d, Grid_fold - Sort, transpose, or test gridding parameters

=head1 SYNOPSIS


Sort3d,Grid_fold  <in.H >out.H pars

=head1 INPUT PARAMETERS


=over 4


=item  nkeys-  integer

       number of sort keys

=item  key_-  character

       name of key to sort in ascending order

=item  ng_-  integer

       number of grid cells for key_

=item  dg_-  real

       sampling of grid cells for key_

=item  og_-  real

       first location of grid cell for key_

=item  plane- char*

       plane to transpose (eg) '34'

=item  verb-  integer

       [0] amount of progress info to print out

=item  synch-  integer

       [0] whether [1] or not [0] to synch traces

=item  compress_tr-  integer

       [1] whether (1) or not(0) to compress the
       trace in bin axis if it equal 1


=item  preserve_nd - integer

        [0]  wheter (1) or not(0) to preserver the input n2,n3,n4,n... values


=item  max_memory,max_size-  integer

       [20] maximum amount of memory in   megabytes
       to use. This is only somewhat accurate because
       it will always hold (n_sort_keys +1 * n2).
       Memory consumed will be approximately
       max(max_memory,100000+(n_sort_keys+1)*n2


=back

=head1 DESCRIPTION


 Sort3d serves three purposes: Sorting, tranposing or testing binning params

 To sort a SEP3d dataset use nkeys key1, og1, etc Sort3d < in.H >out.H [pars]

 To transpose a dataset provide : Sort3d  plane=23 < in.H >out.H

 To test a gridding pattern use sort pars  Grid_fold  < in.H >out.H [pars]

=head1 SEE ALSO


L<Fold3d>

=head1 CATEGORY


B<util/cube>

=cut

