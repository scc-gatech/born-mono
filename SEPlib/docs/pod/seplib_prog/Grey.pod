=head1 NAME


Grey - creates raster  vplot

=head1 SYNOPSIS


Grey par= <in.H >out.[V H]

=head1 DESCRIPTION


Convert data to [raster - vplot] from [float, triplets, or byte]
PLOT =  clip{ [ (DATA - bias)*(it*d1+o1)**tpow ]**gpow }

=head1 INPUT PARAMETERS


=over 4

=item  esize  int   

       [4]   4-float,3-triplets,1-byte

=item  eout-  int   

       [-1]  Create vplot [-1] or byte [1] data

=item  tpow - float 

       [0.]  gain(it) = (it*d1+o1)**tpow, it in samples

=item  pclip- float   

       [99.]  clip percentile

=item  clip - float 

       clip value (if not specified defaults to pclip)

=item  phalf -int   

       [85]  gpow percentile

=item  gpow  -float  

       [1]  if given gpow<=0,
       sample gain power computed at phalf percentile

=item  bias  -float  

       [0.0] plot = data - bias

=item  gainpanel - char* 

       [1]-plane(s) where gpow and clip are estimated
       i - ith plane is used ( i is integer )
       all - all the planes are used
       every - calculate gain parameters for every panel

=item  gainstep - float   

       the subsampling rate used in estimating gpow and clip
       default = max(1,nt/256) (>=1)

=item  allpos   - char    

       [n]/y  if yes, map only positive values to 0-255


=item  n1,n2,n3 - int      

       cube dimensions

=item  d1,d2,d3  -float 

       standard seplib files 

=item  o1,o2,o3  -float 

       standard seplib files

=item  wantframe,wantframenum char 

       standard vplot definitions (0,1, n,y)

=item  wantaxis,wantaxis1,wantaxis2 - char

       [1] standard vplot definition(0,1 n,y)

=item  transp  - char    

       [y] whether or not to transpose output (standard vplot)

=item  xreverse,yreverse -char 

       standard vplot definitions for output file

=item  min1,min2,max1,max - float 

       standard vplot definitions

=item  axisor1,axisor2  - float [min1],[min2] 

       standard vplot definition

=item  o1num,o2num,d1num,d2num - float

       set origin and spacing for tics

=item  n1tic,n2tic - int 

       [1] set number of tics

=item  wheretics - char 

       [f] (f,a) where to put tics (frame, axes)

=item  wheretitle -char 

       [t] (t,b,l,r) where to put title (top, bottom, left, right)

=item  wherexlabel - char 

       [b] (t,b) where to put x label (top, bottom)

=item  whereylabel - char 

       [l] (l,r) where to put y label (left, right)

=item  titlefat,labelfat - int 

       [1] makes title and labels fat

=item  label1,label2 - char* 

       label for axes

=item  title - char* 

       title for plot

=item  titles - char* 

       title for different planes separated by colons
       first:second:third

=item  labelsz - int 

       [8] font size for labels

=item  titlesz - int 

       [10] font size for titles

=item  labelrot - char 

       [y] (0,1 n,y) rotates the labels 90 degrees

=item  grid,grid1,grid2 - char 

       [0]   (0,1 n,y) turns on a grid

=item  g1num,g2num - float 

       [d1num],[d2num] grid spacing

=item  crowd,crowd1,crowd2 - float 

       [.75]  crowd1=crowd  crowd2=crowd 
       (.75< crowd < 1.) crowd labels off the 
       screen by expanding data on 1 or 2 axis.

=item  gridcol - int 

       [axiscol] sets color of grid

=item xll,yll,xur,yur - float

      set Lower Left and Upper Right coordinates

=item  backcol  - float* 

       [0,0,0] background color (R,G,B) between 0 and 1

=item  fillcol  - float* 

       [backcol(0,0,0)] sets fill color (R,G,B) between 0 and 1

=item  plotcol  - int*  

       [6,5,4,3,2,1,...] sets color for each line plotted

=item  axiscol  - int*  

       [7,7,7,7,...] sets color for axes

=item  axisfat  - int*  

       [0,0,0,...] makes axes fat

=item  gridfat  - int  

       [1] makes grid fat

=item  polarity - int 

       [-1] white is high by default

=item  nreserve - int 

       [8] colors to reserve

=item  movish   - char

       [n] if y,halves the color table like movie does (0,1 n,y)

=item  wantscalebar - char 

       [0] (0,1,n,y) turns on scale bar

=item  bartype      - char 

       [v]  (h)   horizontaly or verticaly aligned bar

=item  barwidth     - float 

       [.4]     (inches)

=item  barreverse   - int  

       [0]   (0,1,n,y)  reverse the scale

=item  barlabel     - char

       label for the scale bar 

=item  minval       - float

       minimum on scale bar

=item  maxval       - float

       maximum on scale bar


=item  bar.xll,bar.xur,bar.yll,bar.yur - float

       coordinates for the bar (only used when xll,xur,yll, or yur specified)

=back



=head1 OUTPUT PARAMETERS


=over 4

=item  esize    - int    

       [1]  raster data (if eout =1)
       [2]  short data (if eout =2)

=item  maxval, minval -float   

       maximum and minimum value of data to be displayed
       by Ta2vplot. For use by Ta2vplot's wantscalebar
       option. (if eout=1)

=back 



=head1 COMMENTS


    This replaces the functionality of Taplot and Ta2vplot

    color= one of {I,i,F,R,W,G} for the canned Movie-style color tables. You
    may also append a 'C' to make clipped values show up Red (ie color=IC is
    like color=I but with clipped values flagged). You will need to have
    nreserve at least 3 for this option to work, since you have to leave the
    normal vplot 'Red' (vplot default color 2) as a possibility.
    Alternatively, you may also specify a color of the format RGB,
    (i.e. color=332) where each of R,G, and B is the integer number of bits
    to allot to that primary. This is meant for esize=3, but it also makes
    funky color tables when esize=1.
    Finally, if 'color' is a text string longer than 2 characters and
    does not begin with a digit, it will be taken as the name of a color;
    table. (Color tables have lines of the form 'color_number red green blue',
    where 0 <= color_number <= 255 and 0. <= red, green, and blue <= 1.
    Anything not set will be black. Odd-numbered color table entries between
    1 and 253, inclusive, will be the first lost if the output device doesn't
    have enough allocatable colors.)


=head1 SEE ALSO


L<xtpen>, L<Thplot>, L<Contour>

=head1 CATEGORY


B<sep_graphics>

=head1 COMPILE LEVEL


DISTR

=cut

