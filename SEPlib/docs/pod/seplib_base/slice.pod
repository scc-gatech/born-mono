=head1 NAME


snap,slice - write to the screen an array (through Grey etc)

=head1 SYNOPSIS


C<int snap(name,n1,n2,matrix)>

=head1 INPUT PARAMETERS


=over 4

=item char* - name 

      tag of desired output file

=item int   - n1   

      size of slice in fast dimension

=item int   - n2   

      size of slice along slow axess

=item void* -  matrix

      matrix value of slice

=back

=head1 RETURN VALUES


=over 4

	0 = if successful

=back

=head1 DESCRIPTION


Slice, and snap provide a convenient method of output for
snapshots of intermediate computations or iterations in a form
suitable for processing by other seplib functions (such as Window,
Movie, etc.)  None of the inputs is modified.

=head1 COMMENTS

The input tag name is used to locate and update an associated
auxiliary history file.  The name of the output header is "name".
This may be modified by specifying `name=newtag' on the command line
when a program is invoked.  Input is an n1 by n2 matrix of floating
point values containing the snapshot.  

If more than one call to these subroutines is made, the snapshot is
appended to the file and n3 is updated in the history file.  (This
frees the user from the chore of counting the number of output frames,
a special convenience while debugging.)

The subroutine datapath() is used to generate a name for an output
data file.

slice() only: esize is the element size, typically 1 or 4.

snap() only: If the output header does not exist no snapshots are written.
This allows the user to decide whether or not to create snapshots
on a given run.

=head1 FILES


name	auxiliary header

=head1 SEE ALSO


seplib, datapath, srite

=head1 DIAGNOSTICS


Program execution is terminated with an appropriate error message
if the program attempts to change the snapshot size along the way.
Also for appropriate I/O related errors.

=head1 BUGS

Prexisting snapshot files with the same name are overwritten
without qualms.

=head1 KEYWORDS


snapshot slice output

=head1 LIBRARY


B<sep>

=cut

