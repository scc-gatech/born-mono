.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KIRCH_2D_DEPTH 1"
.TH KIRCH_2D_DEPTH 1 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
Kirch_2d_depth \- Kirchhoff 2D migration
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Kirch_2d_depth  <in.H >out.H tfile=tfile.H  pars
.SH "INPUT PARAMETERS"
.IX Header "INPUT PARAMETERS"
.IP "stdin	  \-	sepfile" 4
.IX Item "stdin	  -	sepfile"
.Vb 1
\&    File for input seismic traces (must be a sep3d file)
.Ve
.IP "stdout	 \- sepfile" 4
.IX Item "stdout	 - sepfile"
.Vb 1
\&    File for common offset migration output  (  sep regular cube)
.Ve
.IP "ttfile	 \-	sepfile" 4
.IX Item "ttfile	 -	sepfile"
.Vb 1
\&   File for input traveltime tables. First axis is Z, second axis X, third
.Ve
.Sp
.Vb 1
\&    axis is regular spaced source locations. If not provided will be
.Ve
.Sp
.Vb 1
\&   calculated.
.Ve
.IP "velfile	 \-	sepfile" 4
.IX Item "velfile	 -	sepfile"
.Vb 1
\&   Velocity file (only needed if travel time file not provided).
.Ve
.IP "dxm  \-  float" 4
.IX Item "dxm  -  float"
.Vb 1
\&   [d3 of grid] Sampling interval of input midpoints
.Ve
.IP "fzo  \- float" 4
.IX Item "fzo  - float"
.Vb 1
\&  z-coordinate of first point in output trace
.Ve
.IP "dzo \- float" 4
.IX Item "dzo - float"
.Vb 1
\&  vertical spacing of output trace
.Ve
.IP "nzo \-  int" 4
.IX Item "nzo -  int"
.Vb 1
\&  number of points in output trace
.Ve
.IP "fmax \- float" 4
.IX Item "fmax - float"
.Vb 1
\&  [0.25/dt]             frequency-highcut for input traces
.Ve
.IP "aperx \- float" 4
.IX Item "aperx - float"
.Vb 1
\&  [nxt*dxt/2]   migration lateral aperature
.Ve
.IP "angmax \- float" 4
.IX Item "angmax - float"
.Vb 1
\& [60]           migration angle aperature from vertical
.Ve
.IP "v0  \- float" 4
.IX Item "v0  - float"
.Vb 1
\&  [1500](m/s)           reference velocity value at surface
.Ve
.IP "dvz \- float" 4
.IX Item "dvz - float"
.Vb 1
\& [0.0]                  reference velocity vertical gradient
.Ve
.IP "ls  \-int" 4
.IX Item "ls  -int"
.Vb 1
\& [1]                    flag for line source
.Ve
.IP "verb  \- int" 4
.IX Item "verb  - int"
.Vb 1
\&  [0]   Whether or not to be verbose
.Ve
.IP "max_size  \- int" 4
.IX Item "max_size  - int"
.Vb 1
\&  [100]  Approximate maximum memory to use
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Performs 2D Kirchoff depth migraion. 
.SH "NOTES"
.IX Header "NOTES"
1. Output regular grid is the basis of the output cmp_x and offset_x
.PP
.Vb 1
\&   parameters. The input dataset should be sep3d gridded data.
.Ve
.PP
.Vb 1
\&   Axis 1 - time, axis 2 - trace_in_bin, axis3-cmp_x, axis4 - offset_x .
.Ve
.PP
.Vb 1
\&   The header keys offset_x and cmp_x must exist in the dataset.
.Ve
.PP
2. This is \s-1SU\s0's sukdmig2d code with only very slight modifications.
.PP
.Vb 1
\&   All credit belongs to  CWP.  If you use it in a paper
.Ve
.PP
.Vb 1
\&   make sure to credit them.
.Ve
.PP
3. Only works meters/feet for some reason???
.PP
4. Traveltime tables were generated by program rayt2d (or other ones)	
.PP
.Vb 1
\&   on relatively coarse grids, with dimension ns*nxt*nzt. In the
.Ve
.PP
.Vb 1
\&   migration process, traveltimes are interpolated into shot/gephone
.Ve
.PP
.Vb 1
\&   positions and output grids.                                  ',
.Ve
.PP
5. If the offset value of an input trace is not in the offset array 	
.PP
.Vb 1
\&   of output, the nearest one in the array is chosen.
.Ve
.PP
6. Memory requirement for this program is about			
.PP
.Vb 1
\&        [ns*nxt*nzt+noff*nxo*nzo+4*nr*nzt+5*nxt*nzt+npa*(2*ns*nxt*nzt
.Ve
.PP
+noff*nxo*nzo+4*nxt*nzt)]*4 bytes				
.PP
.Vb 1
\&   where nr = 1+min(nxt*dxt,0.5*offmax+aperx)/dxo.
.Ve
.PP
6. Amplitudes are computed using the reference velocity profile, v(z),
.PP
.Vb 1
\&   specified by the parameters v0= and dvz=.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\&   Zhenyue Liu, 03/01/95,  Colorado School of Mines
.Ve
.SH "CATEGORY"
.IX Header "CATEGORY"
\&\fBseis/image\fR
