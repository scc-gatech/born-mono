.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CUBEPLOT 1"
.TH CUBEPLOT 1 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
Cubeplot \- plot seismic data cube
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Cubeplot movie=0 frame1=0 frame2=0 frame3=0 point1=0.5 point2=0.5                        wantcoordlabel=1 wantaxes=y popup=n < in.T > out.V
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cubeplot \- 3D raster plot of seismic data cube
.SH "INPUT PARAMETERS"
.IX Header "INPUT PARAMETERS"
.IP "movie	 \- int" 4
.IX Item "movie	 - int"
.Vb 4
\&      0 output is single cube plot
\&      1 output is movie over 1 axis
\&      2 output is movie over 2 axis
\&      3 output is movie over 3 axis
.Ve
.IP "nframe\-  int" 4
.IX Item "nframe-  int"
.Vb 1
\&      number of frames in movie
.Ve
.IP "dframe\-  float" 4
.IX Item "dframe-  float"
.Vb 1
\&      increment between input frames for movie (must be positive)
.Ve
.IP "frame1\-	 int" 4
.IX Item "frame1-	 int"
.Vb 1
\&      frame numbers for cube faces that display
.Ve
.IP "frame2\-  int" 4
.IX Item "frame2-  int"
.Vb 1
\&      a single frame. For faces that display a movie,
.Ve
.IP "frame3\-  int" 4
.IX Item "frame3-  int"
.Vb 1
\&      this is the starting frame number.
.Ve
.IP "center\- int" 4
.IX Item "center- int"
.Vb 1
\&      [0] default the frames to the center of the cube
.Ve
.IP "point1\- float" 4
.IX Item "point1- float"
.Vb 1
\&      front face of cube takes up this fraction of 1 axis
.Ve
.IP "point2\- float" 4
.IX Item "point2- float"
.Vb 1
\&      front face of cube takes up this fraction of 2 axis
.Ve
.IP "flat	\- char" 4
.IX Item "flat	- char"
.Vb 2
\&      if flat=y, the three faces are displayed flat rather
\&      that in a perspective view.
.Ve
.IP "wantcoordlabel\- int" 4
.IX Item "wantcoordlabel- int"
.Vb 7
\&      By default (wantcoordlabel=1), lines are drawn to 
\&      indicate where in the cube the three slices are taken 
\&      from, and the coordinate values of the three cube
\&      slices shown are plotted. If you want the frame numbers
\&      instead of the coordinates, specify wantcoordlabel=0.
\&      If you want lines to be drawn with no labeling,
\&      specify -1. For no lines to be drawn specify -2.
.Ve
.IP "wantaxes	\- char" 4
.IX Item "wantaxes	- char"
.Vb 1
\&      Axes are drawn by default. Specify wantaxes=n to skip them.
.Ve
.IP "wantoutline	\- char" 4
.IX Item "wantoutline	- char"
.Vb 2
\&      By default, lines are drawn to outline each face of the
\&      cube. Specify wantoutline=n to override.
.Ve
.IP "n1pix	 \- int" 4
.IX Item "n1pix	 - int"
.Vb 3
\&      number of pixels on 1 axis of vplot raster
\&      default is 2*n1. Using fewer reduces memory requirements,
\&      but makes a coarser image.
.Ve
.IP "n2pix	\-  int" 4
.IX Item "n2pix	-  int"
.Vb 2
\&      number of pixels on 2 axis of vplot raster
\&      default is 2*n2.
.Ve
.IP "popup \-  char" 4
.IX Item "popup -  char"
.Vb 8
\&      Specifying popup=y brings up an xtpanel 
\&      (if you have xtpanel
\&      installed) with three sliders. Moving these sliders changes
\&      the frames plotted on the three cube faces. If you pipe
\&      the output of Cubeplot to 'Xtpen cachepipe=n' you will see
\&      the display update as the sliders are moved.
\&      You can specify your own xtpanel script file by doing
\&      popup_file=filename.
.Ve
.IP "wantscalebar \- char" 4
.IX Item "wantscalebar - char"
.Vb 1
\&       [0] (0,1,n,y) turns on scale bar
.Ve
.IP "bartype      \- char" 4
.IX Item "bartype      - char"
.Vb 1
\&       [h]  (v)   horizontaly or verticaly aligned bar
.Ve
.IP "barwidth     \- float" 4
.IX Item "barwidth     - float"
.Vb 1
\&       [.4]     (inches)
.Ve
.IP "barreverse   \- int" 4
.IX Item "barreverse   - int"
.Vb 1
\&       [0]   (0,1,n,y)  reverse the scale
.Ve
.IP "barlabel     \- char" 4
.IX Item "barlabel     - char"
.Vb 1
\&       label for the scale bar
.Ve
.IP "screenht \- float" 4
.IX Item "screenht - float"
.Vb 1
\&      [10.24] sets screen height
.Ve
.IP "screenwd \- float" 4
.IX Item "screenwd - float"
.Vb 1
\&      [13.75] sets screen width
.Ve
.IP "screenratio-float" 4
.IX Item "screenratio-float"
.Vb 1
\&      [.75] sets screen height to width ratio
.Ve
.IP "xinch,yinch  \-    float" 4
.IX Item "xinch,yinch  -    float"
.Vb 1
\&      [10.24],[7.5]
.Ve
.IP "crowd,crowd1,crowd2  \- float" 4
.IX Item "crowd,crowd1,crowd2  - float"
.Vb 3
\&      [.75][crowd1=crowd][crowd2=crowd] 
\&      (.75< crowd < 1.) crowds labels off the screen 
\&      by expanding data on 1 or 2 axis.
.Ve
.IP "xll,yll,xur,yur \- int" 4
.IX Item "xll,yll,xur,yur - int"
.Vb 1
\&      sets Lower Left and Upper Right coordinates
.Ve
.IP "wheretitle\- char" 4
.IX Item "wheretitle- char"
.Vb 1
\&      [t] (t,b,l,r) where to put title (top, bottom, left, right)
.Ve
.IP "titlefat \-int" 4
.IX Item "titlefat -int"
.Vb 1
\&      [0] makes the title fat
.Ve
.IP "title \- char*" 4
.IX Item "title - char*"
.Vb 1
\&      title for plot
.Ve
.IP "titlesz \- int" 4
.IX Item "titlesz - int"
.Vb 1
\&      [10] font size for title
.Ve
.IP "backcol \- float*" 4
.IX Item "backcol - float*"
.Vb 1
\&      [0,0,0] background color (R,G,B) between 0 and 1
.Ve
.IP "fillcol \- float*" 4
.IX Item "fillcol - float*"
.Vb 1
\&      [backcol] fill color (R,G,B) between 0 and 1
.Ve
.IP "color  \- char*" 4
.IX Item "color  - char*"
.Vb 1
\&      [I] (esize=1) or  color=332(esize=3)(triplets) color table
.Ve
.IP "polarity\- int" 4
.IX Item "polarity- int"
.Vb 1
\&      [1] white is high by default
.Ve
.IP "nreserve \- int" 4
.IX Item "nreserve - int"
.Vb 1
\&      [8] number of colors to reserve
.Ve
.IP "movish \- char" 4
.IX Item "movish - char"
.Vb 1
\&      [n] if y,halves the color table like movie does (0,1 n,y)
.Ve
.IP "hurry \- char" 4
.IX Item "hurry - char"
.Vb 1
\&      [1]   (0,1 n,y)
.Ve
.SH "COMMENTS"
.IX Header "COMMENTS"
.Vb 10
\&    color= one of {I,i,F,R,W,G,T} just like in Movie. You may also append
\&    a 'C' to make clipped values show up Red (ie color=IC is like color=I
\&    but with clipped values flagged). You will need to have nreserve at least
\&    3 for this option to work, since you have to leave the normal vplot 'Red'
\&    (vplot default color 2) as a possibility.
\&    If color=T, colfile= should give the name of a color-table file (just
\&    like Movie).  Optionally, you may also specify a color of the format RGB,
\&    (ie color=332) where each of R,G, and B is the integer number of bits
\&    to allot to that primary. This is meant for esize=3, but it also makes
\&    funky color tables when esize=1.
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Grey,Rickmovie,xtpen
.SH "COMPILE LEVEL"
.IX Header "COMPILE LEVEL"
.Vb 1
\& DISTR
.Ve
.SH "CATEGORY"
.IX Header "CATEGORY"
\&\fBsep_graphics\fR
