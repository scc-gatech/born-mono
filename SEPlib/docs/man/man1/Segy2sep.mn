.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SEGY2SEP 1"
.TH SEGY2SEP 1 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
Segy2sep \- Convert from Segy to  SEPlib3d
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Segy2sep > stdout tape=   [pars]
.SH "INPUT PARAMETERS"
.IX Header "INPUT PARAMETERS"
.IP "tape    \-file" 4
.IX Item "tape    -file"
.Vb 1
\&       input tape device or seg-y filename (see notes)
.Ve
.IP "buff    \-int" 4
.IX Item "buff    -int"
.Vb 2
\&       [1]  for buffered device (9-track reel tape drive)
\&       =0 possibly useful for 8mm EXABYTE drives
.Ve
.IP "verb \-int" 4
.IX Item "verb -int"
.Vb 1
\&       [0]  silent operation
.Ve
.IP "vblock \- int" 4
.IX Item "vblock - int"
.Vb 1
\&       [50] ; echo every '50' traces
.Ve
.IP "hfile   \-file" 4
.IX Item "hfile   -file"
.Vb 1
\&       [tape.header]  file to store ebcdic block (as ascii)
.Ve
.IP "bfile   \-file" 4
.IX Item "bfile   -file"
.Vb 2
\&       [tape.binary]  file to store binary block
\&       specify full paths to ease conversion back to segy
.Ve
.IP "ns      \-int" 4
.IX Item "ns      -int"
.Vb 1
\&       [bh.hns]  number of samples (use if bhed ns wrong)
.Ve
.IP "trmin   \-int" 4
.IX Item "trmin   -int"
.Vb 1
\&       [1]    first trace to read
.Ve
.IP "trmax   \-int" 4
.IX Item "trmax   -int"
.Vb 1
\&       [INT_MAX]  last trace to read
.Ve
.IP "errmax  \-int" 4
.IX Item "errmax  -int"
.Vb 1
\&       [0]  allowable number of consecutive tape IO errors
.Ve
.IP "nmem-int" 4
.IX Item "nmem-int"
.Vb 1
\&       [100] how many traces to look for non zero header keys
.Ve
.IP "nkeep\-  \-int" 4
.IX Item "nkeep-  -int"
.Vb 1
\&       number of keys we will force to be transfered
.Ve
.IP "keep_   \-char*" 4
.IX Item "keep_   -char*"
.Vb 1
\&       name of the key to keep (size of nkeep)
.Ve
.IP "keeplist\-char*" 4
.IX Item "keeplist-char*"
.Vb 1
\&       name of keys to keep (separated by :)
.Ve
.IP "nextra_keys  \-int" 4
.IX Item "nextra_keys  -int"
.Vb 1
\&       number of extra keys not in SEG-Y standard
.Ve
.IP "extra_name_  \-char*" 4
.IX Item "extra_name_  -char*"
.Vb 1
\&       name of extra key
.Ve
.IP "extra_type_  \-char*" 4
.IX Item "extra_type_  -char*"
.Vb 2
\&       type of extra key (int, unsigned int, short, unsigned
\&       short, long, unsigned long, float, double)
.Ve
.IP "extra_offset \-int*" 4
.IX Item "extra_offset -int*"
.Vb 1
\&       index of extra key (0-238)
.Ve
.IP "nignore \-int" 4
.IX Item "nignore -int"
.Vb 1
\&       number of keys to ignore when converting
.Ve
.IP "ignore_ \-char*" 4
.IX Item "ignore_ -char*"
.Vb 1
\&       name of the key to ignore (size of nignore)
.Ve
.IP "ignorelist\-char*" 4
.IX Item "ignorelist-char*"
.Vb 1
\&       list, separated by :, of keys to ignore
.Ve
.IP "dump_all     \-int" 4
.IX Item "dump_all     -int"
.Vb 1
\&       [0], 1-dump all keys
.Ve
.IP "only_list    \-int" 4
.IX Item "only_list    -int"
.Vb 1
\&       [0], dump only keys listed by keep and extra
.Ve
.IP "ns           \-int" 4
.IX Item "ns           -int"
.Vb 1
\&      number of samples in the dataset
.Ve
.IP "format       \-int" 4
.IX Item "format       -int"
.Vb 1
\&      [5]  Float data
.Ve
.IP "ntraces     \- int" 4
.IX Item "ntraces     - int"
.Vb 2
\&       If you want to pipe out  provide the number
\&       of traces in the dataset, otherwise unpipable.
.Ve
.IP "nsamp_max   \- int" 4
.IX Item "nsamp_max   - int"
.Vb 3
\&       By default each trace is assumed to be SU_NFLTS (1,000,000+)
\&       in size and a copy of that length is done for each trace.
\&       Set this to something more reasonalbe (2000) for a massive speed up.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Read in a segy tape
.SH "COMMENTS"
.IX Header "COMMENTS"
.Vb 6
\&   Notes: Traditionally tape=/dev/rmt0.   However, in the modern world
\&   tape device names are much less uniform.  The magic name can
\&   often be deduced by 'ls /dev'.  Likely man pages with the
\&   names of the tape devices are: 'mt', 'sd' 'st'.  Also
\&   try 'man -k scsi', ' man mt', etc.  Sometimes 'mt status'
\&   will tell the device name.
.Ve
.PP
.Vb 6
\&   For a seg-y diskfile use tape=filename.
\&   Remark: a seg-y file is not the same as an su file.
\&   A seg-y file consists of three parts: an ebcdic header,
\&   a binary reel header, and the traces.  The traces are (usually)
\&   in 32 bit IBM floating point format.  An SU file consists only
\&   of the trace portion written in the native binary floats.
.Ve
.PP
.Vb 1
\&     type:    sudoc segyread   for further information
.Ve
.PP
.Vb 1
\&  ARRAY(INVALID)=(/ns,delrt,d1,f1,f2,d1,d2/)
.Ve
.SH "CATEGORY"
.IX Header "CATEGORY"
\&\fBconverters\fR
