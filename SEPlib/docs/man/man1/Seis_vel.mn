.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SEIS_VEL 1"
.TH SEIS_VEL 1 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
Seis_vel \- Display Seismic and velocity simutaneously
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\& Seis_vel vel=vel.H data=data.H fn_color=color.file  >out.H bg_min= bg_max
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.RE
.IP "vel \- sepfile"
.IX Item "vel - sepfile"
.Vb 1
\& Velocity file
.Ve
.RE
.IP "data \- sepfile"
.IX Item "data - sepfile"
.Vb 1
\& Data file
.Ve
.RE
.IP "data2 \- sepfile"
.IX Item "data2 - sepfile"
.Vb 1
\& Second data file (optional)
.Ve
.RE
.IP "stdout \- sepfile"
.IX Item "stdout - sepfile"
.Vb 1
\&  Datafile to use with Grey
.Ve
.RE
.IP "color \- sepcolor"
.IX Item "color - sepcolor"
.Vb 1
\&  Color file to use with Grey
.Ve
.RE
.IP "fg_linear_or_log \- integer"
.IX Item "fg_linear_or_log - integer"
.Vb 1
\&  [1]   forground color display mode
.Ve
.RE
.IP "fg_clip_linear\- real"
.IX Item "fg_clip_linear- real"
.Vb 1
\&  [.5] (0.-1., percentage of max value of each snapshot
.Ve
.PP
.Vb 1
\&         above which data will be clipped dfor linear mode
.Ve
.RE
.IP "fg_modulate_log\- integer"
.IX Item "fg_modulate_log- integer"
.Vb 1
\&  [10000]  modulate data for log mode, a large integer > 100
.Ve
.RE
.IP "bg_min,bg_max \- real"
.IX Item "bg_min,bg_max - real"
.Vb 1
\& clip bacground values
.Ve
.RE
.IP "fg_nhue \- integer"
.IX Item "fg_nhue - integer"
.Vb 1
\& [18]  number of hues
.Ve
.RE
.IP "fg_nlightness \- integer"
.IX Item "fg_nlightness - integer"
.Vb 1
\& [12]  number of lightness regions
.Ve
.RE
.IP "fg_min_lightness,fg_max_lightness \- real"
.IX Item "fg_min_lightness,fg_max_lightness - real"
.Vb 1
\& [.3,.8]  range of lightness
.Ve
.RE
.IP "fg_saturation \- real"
.IX Item "fg_saturation - real"
.Vb 1
\& [1.]  foreground saturation
.Ve
.RE
.IP "bg_nhue \- integer"
.IX Item "bg_nhue - integer"
.Vb 1
\& [20]  number of background hues
.Ve
.RE
.IP "bg_lightness \- real"
.IX Item "bg_lightness - real"
.Vb 1
\& [.3]  bacground lightness
.Ve
.RE
.IP "bg_saturation \- real"
.IX Item "bg_saturation - real"
.Vb 1
\& [.3]  bacground saturation
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\&     Composing two components (x and y, e.g., p wave and s wave) as
.Ve
.PP
.Vb 1
\&      the foreground with a velocity model as the background
.Ve
.SH "COMMENTS"
.IX Header "COMMENTS"
.Vb 10
\& COLOR SCHEME:
\&      Forground   H: atan2(y,x) (i.e. 360 degree)
\&                  L: sqrt(x^2+y^2)*clip (range e.g. 0.8-0.3)
\&                  S: constant (e.g. 1.0)
\&                  Number of fg colors = fg_nhue * fg_nlightness
\&      Background  H: blue -> magenta (i.e. slow to fast)
\&                  L: constant (e.g. 0.3)
\&                  S: constant (e.g. 0.3)
\&                  Number of bg colors = bg_nhue
\&      Total colors = fg_nhue * fg_nlightness + bg_nhue (default 18*12+20=236)
.Ve
.PP
.Vb 1
\& NOTE: The log mode displays more data using higher lightness colors.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 4
\&          Lin, I-Ching 'Michael'     
\&         Allied Geophysics Laboratories
\&         Department of Computer Science
\&         University of Houston
.Ve
.SH "CATEGORY"
.IX Header "CATEGORY"
\&\fBsep_graphics\fR
