.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STRETCH 1"
.TH STRETCH 1 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
Stretch \- Generic stretch routine
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Stretch rule=nmo conj=0 inv=0 [vel=1.5] [velfile=vel.H] < in.H > out.H
.SH "INPUT PARAMETERS"
.IX Header "INPUT PARAMETERS"
.IP "conj  \-   integer" 4
.IX Item "conj  -   integer"
.Vb 2
\&      [0]  - operator itself
\&      1  - conjugate operator
.Ve
.IP "inv   \-   integer" 4
.IX Item "inv   -   integer"
.Vb 2
\&      [0] -  operator itself
\&      1  - pseudo inverse
.Ve
.IP "rule  \-   character string" 4
.IX Item "rule  -   character string"
.Vb 17
\&      -NMO, linear interp. and tabulation
\&       nmo0  -NMO, nearest neigbor, integer arithmetic.
\&       nmo1  -NMO, nearest neighbor interpolation.
\&       nmo2  -NMO, linear interpolation
\&       unmo  -NMO, pseudoUnitary. (conjugate is pseudoinverse)
\&       rownmo-NMO by linear interp,
\&       inverse divides out the row sum.
\&       offset-trace resampling on 2-axis along hyperbolic curves.
\&       linear on 2-axis, near neighbor on 1-axis.
\&       inverse approximated by conjugate.
\&       radial - radial trace without nmo.
\&       radnmo - radial trace, u=x/tau, nearest
\&       neighbor, does NMO too.
\&       inverse not exact when v=v(tau)
\&       stolt  - stolt stretch, give n1= on command line.
\&       lmo1  -LMO, nearest neighbor interpolation.
\&       lmo2  -LMO, linear interpolation
.Ve
.IP "t_of_tau \- file" 4
.IX Item "t_of_tau - file"
.Vb 1
\&      somefile.H  overrides vel.H
.Ve
.IP "vel     \-  real" 4
.IX Item "vel     -  real"
.Vb 1
\&      [1.5]   velocity
.Ve
.IP "velfile  \- file" 4
.IX Item "velfile  - file"
.Vb 4
\&      velocity file, supersedes constant velocity.  Can be 2-D.
\&      If 2-D, n2 of velocity file must equal n3 of data.  Otherwise
\&      the first velocity function is used for all n3.  Consistency
\&      of o2,d2 of velocity file with o3,d3 of data is NOT checked.
.Ve
.IP "n1,n2   \-  integer" 4
.IX Item "n1,n2   -  integer"
.Vb 1
\&      standard seplib parameters (from history)
.Ve
.IP "o1,o2   \-  real" 4
.IX Item "o1,o2   -  real"
.Vb 1
\&      standard seplib parameters (from history)
.Ve
.IP "d1,d2   \-  real" 4
.IX Item "d1,d2   -  real"
.Vb 1
\&      standard seplib parameters (from history)
.Ve
.IP "n1     \-   integer" 4
.IX Item "n1     -   integer"
.Vb 1
\&      (from velfile) length of velocity trace
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 2
\&  Stretch transformations with:   2       2     2    2
\&                                 t  =  tau  +  x  / v(tau)
.Ve
.SH "COMMENTS"
.IX Header "COMMENTS"
.Vb 3
\&  rule=radnmo not yet passing dot product test.
\&  rule=stolt not yet implemented
\&  rule=lmo not well tested
.Ve
.SH "CATEGORY"
.IX Header "CATEGORY"
\&\fBseis/velan\fR
