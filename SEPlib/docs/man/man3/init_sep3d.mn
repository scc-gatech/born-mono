.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "net::koko::src::our::seplib-6.1::docs::pod::seplib_base::init_sep3d 3"
.TH net::koko::src::our::seplib-6.1::docs::pod::seplib_base::init_sep3d 3 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
init_sep3d \- initialize a SEP3d type
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\f(CW\*(C`call init_sep3d(instruct, outstruct, usage)\*(C'\fR
.PP
\&\f(CW\*(C`call init_sep3d(intag,outstruct,usage)\*(C'\fR
.PP
\&\f(CW\*(C`call init_sep3d(outstruct,usage,data_format,file_format,n,o,d,label,unit,ntraces,keyname,keytype,keyfmt,nh)\*(C'\fR
.SH "INPUT PARAMETERS"
.IX Header "INPUT PARAMETERS"
.ie n .IP "\s-1IMPORTANT\s0 \s-1FOR\s0 \s-1FORTRAN\s0 \s-1USERS\s0 include ""ctag=""out"""" as an argument when initializing output. (have you noticed a f90 file mysteriously in your directory?)" 4
.el .IP "\s-1IMPORTANT\s0 \s-1FOR\s0 \s-1FORTRAN\s0 \s-1USERS\s0 include \f(CWctag=``out''\fR as an argument when initializing output. (have you noticed a f90 file mysteriously in your directory?)" 4
.IX Item "IMPORTANT FOR FORTRAN USERS include ctag=""out"" as an argument when initializing output. (have you noticed a f90 file mysteriously in your directory?)"
.PD 0
.IP "instruct  \-  sep3d" 4
.IX Item "instruct  -  sep3d"
.PD
.Vb 1
\&      Sep3d to structure to copy from
.Ve
.IP "usage     \-  char*" 4
.IX Item "usage     -  char*"
.Vb 1
\&      Usage of the output tag
.Ve
.IP "tag       \-  char*" 4
.IX Item "tag       -  char*"
.Vb 1
\&      Tag to initilize from
.Ve
.IP "data_format\- char*" 4
.IX Item "data_format- char*"
.Vb 1
\&      Data format (FLOAT,INTEGER,BYTE,COMPLEX)
.Ve
.IP "file_format\- char*" 4
.IX Item "file_format- char*"
.Vb 1
\&      File format (GRID,HEADER,REGULAR)
.Ve
.IP "n\-  int*" 4
.IX Item "n-  int*"
.Vb 1
\&      (optional) axis dimensions
.Ve
.IP "o\-  float*" 4
.IX Item "o-  float*"
.Vb 1
\&     (optional)  first sample axis
.Ve
.IP "d\-  float*" 4
.IX Item "d-  float*"
.Vb 1
\&      (optional)  sampling of axis
.Ve
.IP "label\-  char*" 4
.IX Item "label-  char*"
.Vb 1
\&      (optional)  label for axis
.Ve
.IP "unit\-  char*" 4
.IX Item "unit-  char*"
.Vb 1
\&      (optional)  unit for axis
.Ve
.IP "ntraces   \-  int" 4
.IX Item "ntraces   -  int"
.Vb 1
\&      (optional)  number of trac3es
.Ve
.IP "keyname  \- char**" 4
.IX Item "keyname  - char**"
.Vb 1
\&      (optional)  keyname for dataset
.Ve
.IP "keytype  \-  char**" 4
.IX Item "keytype  -  char**"
.Vb 1
\&      (optional)  keytype for dataset
.Ve
.IP "keyfmt \-  char**" 4
.IX Item "keyfmt -  char**"
.Vb 1
\&      (optional)  keyfmt for dataset
.Ve
.IP "nh\-  int" 4
.IX Item "nh-  int"
.Vb 1
\&      (optional)  number of headers to store
.Ve
.SH "OUTPUT PARAMETERS"
.IX Header "OUTPUT PARAMETERS"
.IP "outstruct \-  sep3d" 4
.IX Item "outstruct -  sep3d"
.Vb 1
\&      sep3d structure to create
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Initialize structure
.SH "LIBRARY"
.IX Header "LIBRARY"
\&\fBsupersetf90\fR
