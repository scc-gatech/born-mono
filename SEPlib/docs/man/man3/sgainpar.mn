.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "net::koko::src::our::seplib-6.1::docs::pod::seplib_base::sgainpar 3"
.TH net::koko::src::our::seplib-6.1::docs::pod::seplib_base::sgainpar 3 "Thu Feb 12 16:08:08 2004" "6.0" "SEPlib Manual Pages"
.SH "NAME"
sgainpar \- gain seismic data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\f(CW\*(C`int sgainpar (tag,adata,ant,ahbytes,anx,adit,atpow,ait0,apclip,aphalf,aclip,agpow,adbias,adt,anp,againip)\*(C'\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 2
\& Subroutine to compute gain factors for seismic data all arguments 
\& are addresses if any argument has the value zero, it reverts to its default.
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "tag    \-char*" 4
.IX Item "tag    -char*"
.Vb 1
\&      tag of dataset, may be lseeked to appropiate place, default 0
.Ve
.IP "data   \-float*" 4
.IX Item "data   -float*"
.Vb 2
\&       save copy of data here, useful for pipes
\&       if 0, then data not saved, default 0
.Ve
.IP "nt     \-int*" 4
.IX Item "nt     -int*"
.Vb 1
\&      raslength of data vector, default 1024
.Ve
.IP "nx     \-int*" 4
.IX Item "nx     -int*"
.Vb 2
\&      number of vectors to examine, default all data or 256, 
\&      whichever is less
.Ve
.IP "np     \-int*" 4
.IX Item "np     -int*"
.Vb 1
\&      number of planes of data, (n3)  default 1
.Ve
.IP "dit    \-int*" 4
.IX Item "dit    -int*"
.Vb 3
\&      integer separation between samples,
\&      default nt*nx / 262144, because only 262144 values 
\&      are sorted to find percentiles (for np=1)
.Ve
.IP "tpow   \-float*" 4
.IX Item "tpow   -float*"
.Vb 1
\&      multiply samples by ((it*dit+it0)*dt)**tpow, default 0
.Ve
.IP "it0    \-float*" 4
.IX Item "it0    -float*"
.Vb 1
\&      time of first sample in units of samples, default 0
.Ve
.IP "dbias  \-float*" 4
.IX Item "dbias  -float*"
.Vb 1
\&      subtract dbias from the data
.Ve
.IP "pclip  \-float*" 4
.IX Item "pclip  -float*"
.Vb 1
\&       percentile for clipping seismic data, default 99
.Ve
.IP "phalf  \-float*" 4
.IX Item "phalf  -float*"
.Vb 1
\&      percentile for determining gpow, default 85
.Ve
.IP "gainip \-int*" 4
.IX Item "gainip -int*"
.Vb 3
\&      plane where clip and gpow are estimated
\&      default 1 (the first plane is used)
\&      when -1, data of all planes are considered
.Ve
.IP "d  \-float*" 4
.IX Item "d  -float*"
.Vb 1
\&      sample interval of data
.Ve
.IP "clip \-float*" 4
.IX Item "clip -float*"
.Vb 1
\&      clip value
.Ve
.IP "gpow    \-float*" 4
.IX Item "gpow    -float*"
.Vb 3
\&      raise each data sample to this power,
\&      gpow = log (.5) / log (half / clip),
\&      if (half / clip < .001) gpow = 1. (detects synthetics)
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Grey
.SH "LIBRARY"
.IX Header "LIBRARY"
\&\fBsepaux\fR
