
/*
=head1 NAME
 
Velmerge - Overlay velocity file 
 
=head1 SYNOPSIS
 
Velmerge par= <in.T vel=vel.T >tot.T
 
=head1 DESCRIPTION
 
Merge velocity and data file.
 
=head1 INPUT PARAMETERS
 
=over 4
 
=item  scale  float
 
       [.5]   Scaling value
 
=back

=cut

*/

ADD_DEF_SEP_DOC

#include <stdlib.h>
#include<sepmath.h>
#include<seplib.h>
#include<sep.main>

int MAIN(void)
{
int n[5];
int nv[5];
char temp_ch[1024];
int i,ntot;
unsigned char *in,*vel,*out;
long long mn1;
float gamma,delta,scale;
float alpha;
float mx,mn;
float bb;

ntot=1;
for(i=0; i < 5; i++){
   n[i]=nv[i]=1;
   sprintf(temp_ch,"n%d",i+1);
   hetch(temp_ch,"d",&n[i]);
   auxpar(temp_ch,"d",&nv[i],"vel");
   if(n[i] != nv[i]) seperr("Velocity and image must be the same size")   ;
   ntot=ntot*n[i];
} 

scale=50;
getch("scale","f",&scale);
in =(unsigned char*) malloc(ntot*sizeof(unsigned char));
out =(unsigned char*) malloc(ntot*sizeof(unsigned char));
vel =(unsigned char*) malloc(ntot*sizeof(unsigned char));

if(ntot!=sreed("in",in,ntot)) seperr("trouble reading input");
if(ntot!=sreed("vel",vel,ntot)) seperr("trouble reading velocity");

mn1=0;
for(i=0; i < ntot; i++) mn1=mn1+in[i];
mn1=mn1/ntot;
gamma = ((double)(1. - scale))/3.;;

alpha = 0.6;
for(i=0; i < ntot; i++){
  for (i=0; i < ntot;i++){
    delta = alpha*(in[i] -mn1);
    bb=vel[i]+delta; 
    if(bb < 4) out[i]=4;
    else if(bb > 250.) out[i]=250;
    else out[i]=bb;
  }
  if(scale > 50.) {
    gamma = ((float)(100. - scale)) / ((float)50.);
    for (i=0; i < ntot; i++){
      out[i] = gamma*out[i] + (1.-gamma)*vel[i];
    }
  }
  else {
    mn=255;
   mx=0;
    gamma = ((float)scale) / ((float)50.);
    for (i=0; i< ntot; i++){
      bb = gamma*out[i] + (1.-gamma)*in[i];
      if(bb > 250) out[i]=250;
      if(bb < 5) out[i]=5;
      out[i] =bb;
      if(mx < out[i]) mx=out[i];
      if(mn > out[i]) mn=out[i];
    }
  }
}
fprintf(stderr,"ASDS  %f %f  \n",mn, mx);

srite("out",out,ntot);

return(EXIT_SUCCESS);

}


